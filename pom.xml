<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cz.cvut.fit.maven</groupId>
        <artifactId>root-parent</artifactId>
        <version>2.1.4</version>
    </parent>


    <!--//////////////////// DESCRIPTION ////////////////////-->

    <groupId>cz.cvut.zuul.oaas</groupId>
    <artifactId>zuul-oaas</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Zuul OAAS</name>
    <description>Standalone OAuth 2.0 Authorization Server</description>
    <url>https://github.com/cvut/zuul-oaas</url>
    <inceptionYear>2012</inceptionYear>

    <developers>
        <developer>
            <name>Jakub Jirutka</name>
            <email>jirutjak@fit.cvut.cz</email>
            <organization>CTU in Prague</organization>
            <organizationUrl>http://www.cvut.cz</organizationUrl>
        </developer>
    </developers>


    <!--//////////////////// MODULES ////////////////////-->

    <modules>
        <module>zuul-oaas-common</module>
        <module>zuul-oaas-core</module>
        <module>zuul-oaas-api</module>
        <module>zuul-oaas-restapi</module>
        <module>zuul-oaas-web</module>
        <module>zuul-oaas-main</module>
    </modules>


    <!--//////////////////// DISTRIBUTION ////////////////////-->

    <licenses>
        <license>
            <name>MIT</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/cvut/zuul-oaas</url>
        <connection>scm:git:ssh://git@github.com:cvut/zuul-oaas.git</connection>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/cvut/zuul-oaas/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis</system>
        <url>https://travis-ci.org/cvut/zuul-oaas</url>
    </ciManagement>


    <!--//////////////////// REPOSITORIES ////////////////////-->

    <repositories>
        <repository>
            <id>cvut-local-repos</id>
            <name>CVUT Repository Local</name>
            <url>http://repository.fit.cvut.cz/maven/local-repos/</url>
        </repository>

        <repository>
            <id>cvut-remote-repos</id>
            <name>CVUT Repository Proxies</name>
            <url>http://repository.fit.cvut.cz/maven/remote-repos/</url>
        </repository>
    </repositories>


    <!--//////////////////// PROPERTIES ////////////////////-->

    <properties>
        <bootstrap.version>3.0.0</bootstrap.version>
        <groovy.version>2.4.3</groovy.version>
        <spock.version>1.0-groovy-2.4</spock.version>
        <!-- Keep in sync with platform-bom! -->
        <spring-boot.version>1.2.1.RELEASE</spring-boot.version>
        <spring-security-oauth.version>2.0.6.RELEASE</spring-security-oauth.version>

        <!-- This project uses Cobertura instead of JaCoCo, which unfortunately
             doesn't work well for Groovy. :( -->
        <jacoco.skip>true</jacoco.skip>
    </properties>


    <!--//////////////////// DEPENDENCIES ////////////////////-->

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Required by some Spring modules -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <!--//// Test ////-->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.java.quickcheck</groupId>
            <artifactId>quickcheck</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>1.1.1.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-restapi</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-api</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>zuul-oaas-common</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>cz.jirutka.spring</groupId>
                <artifactId>spring-rest-exception-handler</artifactId>
                <version>1.0.2</version>
            </dependency>

            <!-- Collection validators for JSR-303 -->
            <dependency>
                <groupId>cz.jirutka.validator</groupId>
                <artifactId>validator-collection</artifactId>
                <version>2.1.3</version>
                <exclusions>
                    <!-- Make it optional -->
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-validator</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spring EL powered validator for JSR-303 -->
            <dependency>
                <groupId>cz.jirutka.validator</groupId>
                <artifactId>validator-spring</artifactId>
                <version>1.1.0</version>
            </dependency>

            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>1.4.3</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <!-- Excluded because not needed. -->
                    <exclusion>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-jsp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-xml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.eclipse.jetty.websocket</groupId>
                        <artifactId>websocket-server</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.eclipse.jetty.websocket</groupId>
                        <artifactId>javax-websocket-server-impl</artifactId>
                    </exclusion>
                    <!-- Excluded in favour of javax.servlet:javax.servlet-api -->
                    <exclusion>
                        <groupId>org.eclipse.jetty.orbit</groupId>
                        <artifactId>javax.servlet</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${spring-security-oauth.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jdbc</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.jackson</groupId>
                        <artifactId>jackson-mapper-asl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--//// Test ////-->

            <dependency>
                <groupId>cz.jirutka.spring</groupId>
                <artifactId>embedmongo-spring</artifactId>
                <version>1.3.1</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>de.flapdoodle.embed</groupId>
                <artifactId>de.flapdoodle.embed.mongo</artifactId>
                <version>1.47.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>net.java.quickcheck</groupId>
                <artifactId>quickcheck</artifactId>
                <version>0.6</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-spring</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!--//////////////////// BUILD ////////////////////-->

    <build>
        <sourceDirectory>${project.basedir}/src/main/groovy</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>addSources</goal>
                            <goal>addTestSources</goal>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <targetBytecode>${java.version}</targetBytecode>
                    <invokeDynamic>${groovy.invokeDynamic}</invokeDynamic>
                    <testSources>
                        <testSource>
                            <directory>${project.basedir}/src/test/groovy</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                        <testSource>
                            <directory>${project.basedir}/src/it/groovy</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                    </testSources>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.5</version>
                </plugin>

                <!--
                    Build a JAR with the test classes.
                -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <execution>
                            <id>test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <skipIfEmpty>true</skipIfEmpty>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--
                    Repackage as an executable JAR.
                -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <!--//////////////////// PROFILE ////////////////////-->

    <profiles>
        <!--
            Compile with invokedynamic instruction.

            Requires JDK 7u60+ or JDK 8 in runtime!
            See http://groovy.codehaus.org/InvokeDynamic+support for more information.
        -->
        <profile>
            <id>indy</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <groovy.invokeDynamic>true</groovy.invokeDynamic>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                    <version>${groovy.version}</version>
                    <classifier>indy</classifier>
                </dependency>

                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-json</artifactId>
                    <version>${groovy.version}</version>
                    <classifier>indy</classifier>
                    <exclusions>
                        <!-- Transitive dependency lacks indy classifier. -->
                        <exclusion>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>

        <!--
            Compile without invokedynamic instruction (i.e. use call site caching).
        -->
        <profile>
            <id>no-indy</id>

            <properties>
                <groovy.invokeDynamic>false</groovy.invokeDynamic>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                    <version>${groovy.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-json</artifactId>
                    <version>${groovy.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <!--
            Profile for Travis CI.
        -->
        <profile>
            <id>travis-ci</id>

            <!-- Will be automatically activated on Travis CI. -->
            <activation>
                <property>
                    <name>env.TRAVIS</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <!--
                        Analyze code coverage.

                        This plugin is not bound with any lifecycle phase, it should be
                        executed manually: mvn cobertura:cobertura-integration-test.
                    -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <version>2.7</version>
                        <configuration>
                            <formats>
                                <format>xml</format>
                                <format>html</format>
                            </formats>
                            <aggregate>true</aggregate>
                            <instrumentation>
                                <ignoreTrivial>true</ignoreTrivial>
                                <excludes>
                                    <!-- It doesn't make much sense to measure coverage of configuration. -->
                                    <exclude>cz/cvut/zuul/oaas/config/*.*</exclude>
                                    <exclude>cz/cvut/zuul/oaas/restapi/config/*.*</exclude>
                                    <exclude>cz/cvut/zuul/oaas/web/config/*.*</exclude>
                                </excludes>
                            </instrumentation>
                        </configuration>
                    </plugin>

                    <!--
                        Plugin for submitting code coverage reports to Coveralls.

                        This plugin is not bound with any lifecycle phase, it should be
                        executed manually: mvn coveralls:report.
                    -->
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <!-- Shame to coveralls-maven that it can't read it from the cobertura.xml! -->
                            <sourceDirectories>
                                <sourceDirectory>zuul-oaas-api/src/main/groovy</sourceDirectory>
                                <sourceDirectory>zuul-oaas-common/src/main/groovy</sourceDirectory>
                                <sourceDirectory>zuul-oaas-core/src/main/groovy</sourceDirectory>
                                <sourceDirectory>zuul-oaas-main/src/main/groovy</sourceDirectory>
                                <sourceDirectory>zuul-oaas-restapi/src/main/groovy</sourceDirectory>
                                <sourceDirectory>zuul-oaas-web/src/main/groovy</sourceDirectory>
                            </sourceDirectories>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
